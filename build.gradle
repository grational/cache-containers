/*
 * This build file was auto generated by 'gigawatt'
 * @author gsus
 * @date 28-11-2016 11.25
 */

// [plugins] this block must be the first
plugins {
	// support for groovy
	id 'groovy'
	// autogenerate eclipse project files
	id 'eclipse'
	// create and html index linking every report generated
	id 'build-dashboard'
	// view of the project (jars used, navigable source tree)
	id 'project-report'
	// groovy code linter
	id 'codenarc'
	// test code coverage plugin
	id 'net.saliman.cobertura' version '2.3.2'
	// integration with nexus repository (and more)
	id 'maven'
	// awesome git tag / gradle version integration
	id 'pl.allegro.tech.build.axion-release' version '1.9.1'
}

// [general] configuration
project.ext {
	groovyVersion               = '2.4.7'
	gradleVersion               = '4.1'
	spockVersion                = '1.0-groovy-2.4'
	codenarcVersion             = '0.24.1'
	slf4jVersion                = '1.7.21'
	jedisVersion                = '2.9.0'
	cglibVersion                = '3.2.4'
	objenesisVersion            = '2.5.1'
	compressorDecoratorsVersion = '0.1.0'
	hashDecoratorsVersion       = '0.1.0'
}

project.with {
	//project.name is set in the settings.gradle with rootProject.name
	group                 "it.italiaonline.rnd"
	version               scmVersion.version // '0.5.0' (remove -SNAPSHOT for releases)
	description           "A set of classes to create transparent permanent cache compressed files stored on disks."
	wrapper.gradleVersion "$gradleVersion"
}

// target java 8
allprojects {
	sourceCompatibility = 8
	targetCompatibility = 8
}

repositories {
	jcenter()

	maven { url 'https://jitpack.io' }
}

dependencies {
	// Groovy language support
	compile "org.codehaus.groovy:groovy-all:$groovyVersion"
	compile "redis.clients:jedis:$jedisVersion"

	// Slf4j dependencies
	compile "org.slf4j:slf4j-api:$slf4jVersion"

	// internal nexus dependencies
	compile "com.github.grational:hash-decorators:$hashDecoratorsVersion"
	compile "com.github.grational:compression-decorators:$compressorDecoratorsVersion"

	// We use the awesome Spock testing and specification framework
	testCompile "org.spockframework:spock-core:$spockVersion"
	testCompile "cglib:cglib-nodep:$cglibVersion"
	testCompile "org.objenesis:objenesis:$objenesisVersion"
}

// codenarc groovy source analyses
codenarc{
	toolVersion = "$codenarcVersion"

	codenarcMain {
		configFile = rootProject.file('config/codenarc/ruleset.groovy')
		exclude "**/package-info.*"
		ignoreFailures true       // does not block builds
		maxPriority1Violations 0
		maxPriority2Violations 10
		maxPriority3Violations 20
	}
	codenarcTest {
		configFile = rootProject.file('config/codenarc/ruleset-test.groovy')
		ignoreFailures true
		maxPriority1Violations 0
		maxPriority2Violations 10
		maxPriority3Violations 20
	}
}

// [tasks] configuration //
jar {
	// execute check task when create the jar
	dependsOn 'check'
}

check {
	// clean before check
	dependsOn 'clean'
	// create the code coverage report
	dependsOn 'cobertura'
	// set the correct order for the dep tasks
	tasks.findByName('cobertura').mustRunAfter 'clean'
}

// [tasks] definition
task listJars {
	description = 'print out the jars used by the project'
	doLast {
		configurations.compile.each { File file -> println file.name }
	}
}

// vim: ft=groovy:fdm=indent
